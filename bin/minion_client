#!/usr/bin/env node

var opts = JSON.parse(process.argv[2]);

var name = opts.name;
var marshal = opts.marshal;
var endpoint = opts.config.endpoint;
var script = opts.config.script;
var user = opts.config.user || {};

var clientConfig = 
  endpoint == 'insecure' ? {
    host: process.env.INSECURE_ADDRESS,
    port: parseInt(process.env.INSECURE_PORT),
  } : endpoint == 'secure' ? {
    host: process.env.SECURE_ADDRESS,
    port: parseInt(process.env.SECURE_PORT),
  } : { // default
    host: process.env.INSECURE_ADDRESS,
    port: parseInt(process.env.INSECURE_PORT),
  };

var Happner = require('happner');

var error = function(e) {
  if (report && report.exchange) {
    var ee = {};
    ee.name = e.name;
    ee.message = e.message;
    Object.keys(e).forEach(function(key) {
      ee[key] = e[key];
    });
    return report.exchange.controller.minionError(name, ee)
    .then(function() {
      process.exit(1);
    })
    .catch(function() {
      console.error(e);
      process.exit(1);
    })

  }
  process.exit(1);
}

// Reports back to marshal.
var report = new Happner.MeshClient({
  host: marshal.datalayer.address.address,
  port: marshal.datalayer.address.port,
});

console.log('CCC', clientConfig);

var client = new Happner.MeshClient(clientConfig);

report.login()

.then(function() {
  return client.login(user)
})

.then(function() {
  return report.exchange.controller.minionReady({
    name: name,
    timestamp: Date.now()
  })
  .then(function() {

    var run = require('../scripts/client_' + script);

    // Call specified script with:
    // name (of minion),
    // report (meshclient connected to marshal),
    // client (meshclient connected to bin/secure or bin/insecure),
    return run.start(name, report, client);

  })
})
.catch(error);
