module.exports = ControllerMarshal;

var Promise = require('bluebird');
var shortid = require('shortid');
var spawn = require('child_process').spawn;

function ControllerMarshal() {
  this.minions = {};
}

ControllerMarshal.prototype.start = function($happn, callback) {

  var _this = this;

  var masterAddress = $happn.config.master.split('/');

  // $happn._mesh.datalayer.events.on('detatch', function(ev) {
  //   // console.log('detatched', JSON.stringify(ev, null, 2));

  //   var name;

  //   try { 
  //     name = ev.info.happner.mesh.name;
  //   } catch (e) {
  //     $happn.log.error('detatch without name', e);
  //     return;
  //   }

  // });

  var masterExchange = $happn.exchange[masterAddress[0]][masterAddress[1]];
  var masterEvent = $happn.event[masterAddress[0]][masterAddress[1]];


  return Promise.all([

    masterEvent.onAsync('keepalive', function(data) {

      var master = data.master;
      if (master.process == _this.master.process) return;

      // new master detected, reregister
      masterExchange.registerMarshal({
        info: $happn.info
      })

      .then(function(masterInfo) {
        _this.master = masterInfo;
      })

      .catch(function(e) {
        $happn.error('re-register failed', e);
      })


    }),


    masterEvent.onAsync('minion/spawn/at/' + $happn.info.mesh.name, function(data, meta) {
      var id = shortid();
      _this.minions[id] = data;

      var spawnConfig = JSON.stringify({
        id: id,
        endpoint: {
          host: $happn.info.datalayer.address.address,
          port: $happn.info.datalayer.address.port,
        }
      });

      var child = _this.minions[id].process = spawn('bin/minion', [spawnConfig]);

      child.on('error', function(e) {
        $happn.log.error('spawn error', e);
      });

      child.stdout.on('data', function(data) {
        console.log('STDOUT -', data.toString());
      });

      child.stderr.on('data', function(data) {
        console.log('STDERR -', data.toString());
      });


    }),


    masterEvent.onAsync('minion/kill', function(data, meta) {
      console.log('kill', data, meta);
    }),

  ])

  .then(function() {
    return masterExchange.registerMarshal({
      info: $happn.info
    });
  })

  .then(function(masterInfo) {
    _this.master = masterInfo;
  })

  .then(callback)

  .catch(callback);

}
