module.exports = ControllerMarshal;

var Promise = require('bluebird');

function ControllerMarshal() {
}

ControllerMarshal.prototype.start = function($happn, callback) {

  var _this = this;

  var masterAddress = $happn.config.master.split('/');

  $happn._mesh.datalayer.events.on('detatch', function(ev) {
    // console.log('detatched', JSON.stringify(ev, null, 2));

    var name;

    try { 
      name = ev.info.happner.mesh.name;
    } catch (e) {
      $happn.log.error('detatch without name', e);
      return;
    }

    console.log('detatch')

  });

  var masterExchange = $happn.exchange[masterAddress[0]][masterAddress[1]];
  var masterEvent = $happn.event[masterAddress[0]][masterAddress[1]];


  return Promise.all([

    masterEvent.onAsync('minion/spawn', function(data, meta) {

      console.log('spawn', data, meta);

    }),

    masterEvent.onAsync('minion/kill', function(data, meta) {

      console.log('kill', data, meta);

    }),

  ])

  .then(function() {

    return masterExchange.register($happn.info);

  })

  .then(function(masterInfo) {

    _this.master = masterInfo;

  })

  .then(callback)

  .catch(callback);

}
